<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>webservices on Tahir Hashmi</title><link>https://tahirhashmi.com/tags/webservices/</link><description>Recent content in webservices on Tahir Hashmi</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><managingEditor>mail@tahirhashmi.com (Tahir Hashmi)</managingEditor><webMaster>mail@tahirhashmi.com (Tahir Hashmi)</webMaster><lastBuildDate>Mon, 28 Oct 2013 09:35:46 +0000</lastBuildDate><atom:link href="https://tahirhashmi.com/tags/webservices/index.xml" rel="self" type="application/rss+xml"/><item><title>Mapping OO Interfaces to REST</title><link>https://tahirhashmi.com/posts/2013/10/28/mapping-oo-interfaces-to-rest/</link><pubDate>Mon, 28 Oct 2013 09:35:46 +0000</pubDate><author>mail@tahirhashmi.com (Tahir Hashmi)</author><guid>https://tahirhashmi.com/posts/2013/10/28/mapping-oo-interfaces-to-rest/</guid><description>A few days ago, my BBF (Big Boss Forever) Vijay R asked the following question:
Any resources on how to map OO design (controlled state change via methods) to RESTful services? #help
— Vijay Ramachandran (@vijay750) October 24, 2013
Here’s what I think about it. There are a few things that are very different about designing HTTP APIs as compared to language-native implementation design:
The goal of an HTTP API is to minimise coupling and facilitate interoperability, which is less of a concern when the usage environment is restricted to a single programming language and its runtime</description></item><item><title>PHP vs. Python for Web Apps</title><link>https://tahirhashmi.com/posts/2010/07/28/php-vs-python-for-web-apps/</link><pubDate>Wed, 28 Jul 2010 12:00:42 +0000</pubDate><author>mail@tahirhashmi.com (Tahir Hashmi)</author><guid>https://tahirhashmi.com/posts/2010/07/28/php-vs-python-for-web-apps/</guid><description>These days, more and more people ask the Python vs. PHP question when they start out with a web application from scratch. I’ve developed PHP applications for 5 years but for the last couple of years I’ve been doing Python. This post is meant to note some of my observations. If you don’t want to read the whole of it, my opinion — opinion — is to stick with PHP for dishing out your *ML.</description></item></channel></rss>